version: "3.1"

name: argon-dev

services:
  mongo:
    image: mongo
    hostname: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongodb:/data/db
      - ./key:/data/replica.key
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: test
    entrypoint:
      - bash
      - -c
      - |
        chmod 400 /data/replica.key
        chown 999:999 /data/replica.key
        exec docker-entrypoint.sh $$@
    command: mongod --replSet rs0 --bind_ip_all --keyFile /data/replica.key

  # config = {
  #   "_id" : "rs0",
  #   "members" : [
  #     {
  #       "_id" : 0,
  #       "host" : "mongo:27017"
  #     },
  #   ]
  # };
  # rs.initiate(config);

  minio:
    image: minio/minio
    restart: always
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio:/data
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: password
    command: server /data --console-address ":9001"

  dragonfly_cache:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    restart: always
    ulimits:
      memlock: -1
    ports:
      - 6379:6379
    volumes:
      - cache:/data

  dragonfly_ranklist:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    restart: always
    ulimits:
      memlock: -1
    ports:
      - 6380:6379
    volumes:
      - ranklist:/data

  rabbitmq:
    image: rabbitmq:management
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=password

volumes:
  mongodb:
  minio:
  cache:
  ranklist:
  rabbitmq:
